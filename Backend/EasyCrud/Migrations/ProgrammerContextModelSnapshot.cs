// <auto-generated />
using EasyCrud.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EasyCrud.Migrations
{
    [DbContext(typeof(ProgrammerContext))]
    partial class ProgrammerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyCrud.Models.Availability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Op1");

                    b.Property<bool>("Op2");

                    b.Property<bool>("Op3");

                    b.Property<bool>("Op4");

                    b.Property<bool>("Op5");

                    b.HasKey("Id");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("EasyCrud.Models.BankInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccNumber");

                    b.Property<int>("AccType");

                    b.Property<string>("Agency");

                    b.Property<string>("Bank");

                    b.Property<string>("Cpf");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BankInfo");
                });

            modelBuilder.Entity("EasyCrud.Models.BestTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Op1");

                    b.Property<bool>("Op2");

                    b.Property<bool>("Op3");

                    b.Property<bool>("Op4");

                    b.Property<bool>("Op5");

                    b.HasKey("Id");

                    b.ToTable("BestTime");
                });

            modelBuilder.Entity("EasyCrud.Models.Knoledge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Android");

                    b.Property<string>("Angular");

                    b.Property<string>("Aspnet");

                    b.Property<string>("Bootstrap");

                    b.Property<string>("C");

                    b.Property<string>("Cake");

                    b.Property<string>("Cpp");

                    b.Property<string>("Css");

                    b.Property<string>("Django");

                    b.Property<string>("Html");

                    b.Property<string>("Illustrator");

                    b.Property<string>("Ionic");

                    b.Property<string>("Ios");

                    b.Property<string>("Java");

                    b.Property<string>("Jquery");

                    b.Property<string>("Majento");

                    b.Property<string>("Mysql");

                    b.Property<string>("Other");

                    b.Property<string>("Photoshop");

                    b.Property<string>("Php");

                    b.Property<string>("Python");

                    b.Property<string>("Ruby");

                    b.Property<string>("Salesforce");

                    b.Property<string>("Seo");

                    b.Property<string>("Sqls");

                    b.Property<string>("Wordpress");

                    b.HasKey("Id");

                    b.ToTable("Knoledge");
                });

            modelBuilder.Entity("EasyCrud.Models.Programmer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AvailabilityId");

                    b.Property<string>("Bank");

                    b.Property<long?>("BankInfoId");

                    b.Property<long?>("BestTimeId");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<long?>("KnoledgeId");

                    b.Property<string>("Link");

                    b.Property<string>("Linkedin");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Portfolio");

                    b.Property<int>("Salary");

                    b.Property<string>("Skype");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("BankInfoId");

                    b.HasIndex("BestTimeId");

                    b.HasIndex("KnoledgeId");

                    b.ToTable("Programmer");
                });

            modelBuilder.Entity("EasyCrud.Models.Programmer", b =>
                {
                    b.HasOne("EasyCrud.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("EasyCrud.Models.BankInfo", "BankInfo")
                        .WithMany()
                        .HasForeignKey("BankInfoId");

                    b.HasOne("EasyCrud.Models.BestTime", "BestTime")
                        .WithMany()
                        .HasForeignKey("BestTimeId");

                    b.HasOne("EasyCrud.Models.Knoledge", "Knoledge")
                        .WithMany()
                        .HasForeignKey("KnoledgeId");
                });
#pragma warning restore 612, 618
        }
    }
}
